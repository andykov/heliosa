/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./app/js/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./app/js/app.js":
/*!***********************!*\
  !*** ./app/js/app.js ***!
  \***********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/helpers */ "./app/js/utils/helpers.js");
/* harmony import */ var _modules_dropdown_native__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/dropdown-native */ "./app/js/modules/dropdown-native.js");
/* harmony import */ var _modules_dropdown_native__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_modules_dropdown_native__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _modules_mobileNav__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/mobileNav */ "./app/js/modules/mobileNav.js");
/* harmony import */ var _modules_tabs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/tabs */ "./app/js/modules/tabs.js");
/* harmony import */ var _modules_bannerCollection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/bannerCollection */ "./app/js/modules/bannerCollection.js");
/* harmony import */ var _modules_bannerCollection__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_modules_bannerCollection__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _modules_photoGallery__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/photoGallery */ "./app/js/modules/photoGallery.js");
/* harmony import */ var _modules_historyGallery__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/historyGallery */ "./app/js/modules/historyGallery.js");
/* harmony import */ var _modules_compareGallery__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/compareGallery */ "./app/js/modules/compareGallery.js");
/* harmony import */ var _modules_galleryRecommend__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/galleryRecommend */ "./app/js/modules/galleryRecommend.js");
/* harmony import */ var _modules_galleryTabs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/galleryTabs */ "./app/js/modules/galleryTabs.js");
/* harmony import */ var _modules_productQuantity__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/productQuantity */ "./app/js/modules/productQuantity.js");
/* harmony import */ var _modules_productQuantity__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_modules_productQuantity__WEBPACK_IMPORTED_MODULE_10__);











var dropdownsInit = document.querySelectorAll('[data-toggle="dropdown"]');

if (dropdownsInit.length) {
  var filters;
  dropdownsInit.forEach(function (elem) {
    filters = new _modules_dropdown_native__WEBPACK_IMPORTED_MODULE_1___default.a(elem);
  });
  var btnClear = document.querySelector('.js-filters-clear');
  btnClear.addEventListener('click', function (e) {
    filters.clear();
  });
}

var filterMobile = document.querySelector('.js-filter-mobile');

if (filterMobile) {
  filterMobile.addEventListener('click', function () {
    filterMobile.parentNode.classList.toggle('show');
  });
}

var specBtn = document.querySelectorAll('.product-spec__btn');

if (specBtn) {
  specBtn.forEach(function (btn) {
    btn.addEventListener('click', function (event) {
      event.stopPropagation();
      var stopItem = btn.parentNode.querySelector('[data-spec-stop]');
      stopItem.setAttribute('data-spec-stop', stopItem.getAttribute('data-spec-stop') === 'true' ? 'false' : 'true');
      this.classList.toggle('active');
    });
  });
}

var accordion = document.querySelectorAll('.accordion'),
    accordionSectionHead = document.querySelectorAll('.accordion__head');

if (accordion) {
  accordionSectionHead.forEach(function (item) {
    item.addEventListener('click', function (event) {
      var target = event.currentTarget;
      target.parentElement.classList.toggle('opened');
    });
  });
}

var inputFromColors = document.querySelectorAll('input[type="radio"][data-color-from]');

if (inputFromColors.length) {
  inputFromColors.forEach(function (input) {
    var img = document.querySelector('img[data-color-to]');
    if (!img) return false;

    if (input.checked) {
      img.src = input.dataset.colorFrom;
    }

    input.addEventListener('change', function (e) {
      var target = e.target;
      img.src = target.dataset.colorFrom;
    });
  });
}

document.addEventListener('click', function (e) {
  if (Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["isOutSideClick"])(e, '.nav')) {
    var nav = document.querySelector('.nav');
    nav.classList.remove('opened');
    Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["overlayVisibility"])(false);
  }
});
MicroModal.init({
  onShow: function onShow(modal) {
    if (modal.id == 'modal-auth') {
      MicroModal.close('modal-login');
    }

    if (modal.id == 'modal-login') {
      MicroModal.close('modal-auth');
    }
  },
  // onClose: onCloseModal,
  openTrigger: 'data-micromodal-trigger',
  closeTrigger: 'data-micromodal-close',
  disableScroll: true,
  disableFocus: false,
  awaitOpenAnimation: false,
  awaitCloseAnimation: false,
  debugMode: true
});

/***/ }),

/***/ "./app/js/modules/bannerCollection.js":
/*!********************************************!*\
  !*** ./app/js/modules/bannerCollection.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var bannerCollectionElem = document.querySelector('.js-banner-collections');

if (bannerCollectionElem) {
  var splide = new Splide(bannerCollectionElem, {
    autoplay: false
  });
  splide.mount();
}

/***/ }),

/***/ "./app/js/modules/compareGallery.js":
/*!******************************************!*\
  !*** ./app/js/modules/compareGallery.js ***!
  \******************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helpers */ "./app/js/utils/helpers.js");
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }


var sliderCompareElem = document.querySelector('.js-compare-gallery');

if (sliderCompareElem) {
  var galleryCompare = new Splide(sliderCompareElem, {
    perPage: 4,
    perMove: 1,
    pagination: false,
    breakpoints: {
      1240: {
        perPage: 3,
        gap: 70
      },
      991: {
        perPage: 2,
        gap: 25
      },
      480: {
        gap: 15
      }
    }
  });
  galleryCompare.mount();
  var specListCells = document.querySelectorAll('.spec-list__cells');
  var collectionsCells = [];
  specListCells.forEach(function (list, i) {
    collectionsCells.push(_toConsumableArray(list.children));
  });
  galleryCompare.on('mounted', Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["onMountedHideArrowsSlider"])(galleryCompare));
  galleryCompare.on('hidden', function (slide) {
    collectionsCells.forEach(function (collection) {
      collection[slide.index].style.display = 'none';
    });
  });
  galleryCompare.on('visible', function (slide) {
    collectionsCells.forEach(function (collection) {
      collection[slide.index].style.display = 'block';
      collection[slide.index].animate([{
        transform: 'translateX(5%)',
        opacity: 0
      }, {
        transform: 'translateX(0px)',
        opacity: 1
      }], {
        easing: 'ease-out',
        duration: 500
      });
    });
  });
}

/***/ }),

/***/ "./app/js/modules/dropdown-native.js":
/*!*******************************************!*\
  !*** ./app/js/modules/dropdown-native.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
 * Native JavaScript for Bootstrap Dropdown v3.0.14 (https://thednp.github.io/bootstrap.native/)
 * Copyright 2015-2020 © dnp_theme
 * Licensed under MIT (https://github.com/thednp/bootstrap.native/blob/master/LICENSE)
 */
(function (global, factory) {
  ( false ? undefined : _typeof(exports)) === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
				__WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : (undefined);
})(this, function () {
  'use strict';

  function queryElement(selector, parent) {
    var lookUp = parent && parent instanceof Element ? parent : document;
    return selector instanceof Element ? selector : lookUp.querySelector(selector);
  }

  function queryElementAll(selector, parent) {
    var lookUp = parent && parent instanceof Element ? parent : document;
    return selector instanceof Element ? selector : lookUp.querySelectorAll(selector);
  }

  function bootstrapCustomEvent(eventName, componentName, eventProperties) {
    var OriginalCustomEvent = new CustomEvent(eventName + '.bs.' + componentName, {
      cancelable: true
    });

    if (typeof eventProperties !== 'undefined') {
      Object.keys(eventProperties).forEach(function (key) {
        Object.defineProperty(OriginalCustomEvent, key, {
          value: eventProperties[key]
        });
      });
    }

    return OriginalCustomEvent;
  }

  function dispatchCustomEvent(customEvent) {
    this && this.dispatchEvent(customEvent);
  }

  function setFocus(element) {
    element.focus ? element.focus() : element.setActive();
  }

  function Dropdown(element, option) {
    var self = this,
        showCustomEvent,
        shownCustomEvent,
        hideCustomEvent,
        hiddenCustomEvent,
        relatedTarget = null,
        parent,
        menu,
        label = element.querySelector('.dropdown__selected'),
        labelDefault = null,
        clear = element.querySelector('[data-clear]'),
        menuItems = [],
        selected = [],
        persist;
    parent = element.parentNode;
    var checkboxes = queryElementAll('input[type="checkbox"]', parent);

    if (label) {
      labelDefault = label.textContent;
    }

    console.log('selectedselected ', selected);
    checkboxes.forEach(function (item, i) {
      // var selected = [];
      if (item.checked) {
        var checkParent = item.parentNode;
        var span = queryElement('span', checkParent);
        selected.push(span.textContent);
        setLabelSelected(selected);
        clear.classList.add('show');

        if (selected.length) {
          parent.classList.add('selected');
        }
      }

      item.addEventListener('change', function () {
        selected = [];
        console.log(element);
        checkboxes.forEach(function (input, i) {
          if (input.checked) {
            var _parent = input.parentNode;

            var _span = queryElement('span', _parent);

            selected.push(_span.textContent);
          } else {
            clear.classList.remove('show');
          }
        });

        if (selected.length) {
          setLabelSelected(selected);
          clear.classList.add('show');
          parent.classList.add('selected');
        } else {
          label.textContent = labelDefault;
        }
      });
    });

    function setLabelSelected(selected) {
      var maxAmount = 2;
      var labels = selected.slice(0, maxAmount);
      var count = selected.length - maxAmount;
      label.textContent = labels;

      if (count > 0) {
        label.textContent = "".concat(labels, " +").concat(count);
      }

      if (label.clientWidth + 90 >= element.offsetWidth) {
        console.log('>', selected.length);
      } else {
        console.log('<', selected.length);
      }
    }

    if (clear) {
      clear.addEventListener('click', function (e) {
        e.stopPropagation();
        e.target.classList.remove('show');
        checkboxes.forEach(function (input) {
          input.checked = false;
        });
        label.textContent = labelDefault;
        selected = [];

        if (!selected.length) {
          parent.classList.remove('selected');
        }
      });
    }

    function preventEmptyAnchor(anchor) {
      (anchor.href && anchor.href.slice(-1) === '#' || anchor.parentNode && anchor.parentNode.href && anchor.parentNode.href.slice(-1) === '#') && this.preventDefault();
    }

    function toggleDismiss() {
      var action = element.open ? 'addEventListener' : 'removeEventListener';
      document[action]('click', dismissHandler, false);
      document[action]('keydown', preventScroll, false);
      document[action]('keyup', keyHandler, false);
      document[action]('focus', dismissHandler, false);
    }

    function dismissHandler(e) {
      var eventTarget = e.target,
          hasData = eventTarget && (eventTarget.getAttribute('data-toggle') || eventTarget.parentNode && eventTarget.parentNode.getAttribute && eventTarget.parentNode.getAttribute('data-toggle'));

      if (e.type === 'focus' && (eventTarget === element || eventTarget === menu || menu.contains(eventTarget))) {
        return;
      }

      if ((eventTarget === menu || menu.contains(eventTarget)) && (persist || hasData)) {
        return;
      } else {
        relatedTarget = eventTarget === element || element.contains(eventTarget) ? element : null;
        self.hide();
      }

      preventEmptyAnchor.call(e, eventTarget);
    }

    function clickHandler(e) {
      console.log(1);
      relatedTarget = element;
      self.show();
      preventEmptyAnchor.call(e, e.target);
    }

    function preventScroll(e) {
      var key = e.which || e.keyCode;

      if (key === 38 || key === 40) {
        e.preventDefault();
      }
    }

    function keyHandler(e) {
      var key = e.which || e.keyCode,
          activeItem = document.activeElement,
          isSameElement = activeItem === element,
          isInsideMenu = menu.contains(activeItem),
          isMenuItem = activeItem.parentNode === menu || activeItem.parentNode.parentNode === menu,
          idx = menuItems.indexOf(activeItem);

      if (isMenuItem) {
        idx = isSameElement ? 0 : key === 38 ? idx > 1 ? idx - 1 : 0 : key === 40 ? idx < menuItems.length - 1 ? idx + 1 : idx : idx;
        menuItems[idx] && setFocus(menuItems[idx]);
      }

      if ((menuItems.length && isMenuItem || !menuItems.length && (isInsideMenu || isSameElement) || !isInsideMenu) && element.open && key === 27) {
        self.toggle();
        relatedTarget = null;
      }
    }

    self.show = function () {
      showCustomEvent = bootstrapCustomEvent('show', 'dropdown', {
        relatedTarget: relatedTarget
      });
      dispatchCustomEvent.call(parent, showCustomEvent);

      if (showCustomEvent.defaultPrevented) {
        return;
      } // menu.classList.add('show');


      parent.classList.add('show'); // element.setAttribute('aria-expanded', true);

      element.open = true;
      element.removeEventListener('click', clickHandler, false);
      setTimeout(function () {
        setFocus(menu.getElementsByTagName('INPUT')[0] || element);
        toggleDismiss();
        shownCustomEvent = bootstrapCustomEvent('shown', 'dropdown', {
          relatedTarget: relatedTarget
        });
        dispatchCustomEvent.call(parent, shownCustomEvent);
      }, 1);
    };

    self.clear = function (elem) {
      var filters = document.querySelectorAll('.filters__item .dropdown');
      filters.forEach(function (item) {
        var clearItem = item.querySelector('[data-clear]');
        var isActive = clearItem.classList.contains('show');

        if (isActive) {
          clearItem.click();
        }
      });
    };

    self.hide = function () {
      if (selected.length) {
        parent.classList.add('selected');
      }

      hideCustomEvent = bootstrapCustomEvent('hide', 'dropdown', {
        relatedTarget: relatedTarget
      });
      dispatchCustomEvent.call(parent, hideCustomEvent);

      if (hideCustomEvent.defaultPrevented) {
        return;
      }

      menu.classList.remove('show');
      parent.classList.remove('show'); // element.setAttribute('aria-expanded', false);

      element.open = false;
      toggleDismiss();
      setFocus(element);
      setTimeout(function () {
        element.Dropdown && element.addEventListener('click', clickHandler, false);
      }, 1);
      hiddenCustomEvent = bootstrapCustomEvent('hidden', 'dropdown', {
        relatedTarget: relatedTarget
      });
      dispatchCustomEvent.call(parent, hiddenCustomEvent);
    };

    self.toggle = function () {
      if (parent.classList.contains('show') && element.open) {
        self.hide();
      } else {
        self.show();
      }
    };

    self.dispose = function () {
      if (parent.classList.contains('show') && element.open) {
        self.hide();
      }

      element.removeEventListener('click', clickHandler, false);
      delete element.Dropdown;
    };

    element = queryElement(element);
    element.Dropdown && element.Dropdown.dispose();
    parent = element.parentNode;
    menu = queryElement('.dropdown__body', parent);

    if (menu) {
      Array.from(menu.children).map(function (child) {
        child.children.length && child.children[0].tagName === 'A' && menuItems.push(child.children[0]);
        child.tagName === 'A' && menuItems.push(child);
      });

      if (!element.Dropdown) {
        !('tabindex' in menu) && menu.setAttribute('tabindex', '0');
        element.addEventListener('click', clickHandler, false);
      }
    }

    persist = option === true || element.getAttribute('data-persist') === 'true' || false;
    element.open = false;
    element.Dropdown = self;
  }

  return Dropdown;
});

/***/ }),

/***/ "./app/js/modules/galleryRecommend.js":
/*!********************************************!*\
  !*** ./app/js/modules/galleryRecommend.js ***!
  \********************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helpers */ "./app/js/utils/helpers.js");

var galleryRecommendElem = document.querySelector('.js-gallery-recommends');

if (galleryRecommendElem) {
  var galleryRecommend = new Splide(galleryRecommendElem, {
    gap: 30,
    rewind: true,
    autoplay: false,
    pagination: false,
    perPage: 3,
    perMove: 1,
    breakpoints: {
      1200: {
        perPage: 3
      },
      991: {
        perPage: 2
      },
      639: {
        perPage: 1
      }
    }
  }).mount();
  galleryRecommend.mount();
  galleryRecommend.on('mounted', Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["setCurrentIndexSLide"])(galleryRecommend));
  galleryRecommend.on('move', function (newIndex) {
    Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["setCurrentIndexSLide"])(galleryRecommend, newIndex);
  });
}

/***/ }),

/***/ "./app/js/modules/galleryTabs.js":
/*!***************************************!*\
  !*** ./app/js/modules/galleryTabs.js ***!
  \***************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helpers */ "./app/js/utils/helpers.js");

var galleryTabs = document.querySelectorAll('[data-catalog-tabs] button');
var galleryItems = document.querySelectorAll('[data-catalog-item]'); // init first gallery

var productGalleryOptions = {
  perPage: 3,
  perMove: 1,
  pagination: false,
  gap: 30,
  autoplay: true,
  breakpoints: {
    1200: {
      perPage: 3
    },
    991: {
      perPage: 2
    },
    639: {
      perPage: 1
    }
  }
};

if (galleryItems.length) {
  var firstItemGallery = new Splide(galleryItems[0].children[0], productGalleryOptions);
  galleryTabs[0].classList.add('active');
  firstItemGallery.mount();
  firstItemGallery.on('mounted', Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["onMountedHideArrowsSlider"])(firstItemGallery));
  firstItemGallery.on('mounted', Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["setCurrentIndexSLide"])(firstItemGallery));
  firstItemGallery.on('move', function (newIndex) {
    Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["setCurrentIndexSLide"])(firstItemGallery, newIndex);
  }); // init gallery on tab click

  galleryTabs.forEach(function (tab, i) {
    tab.addEventListener('click', function (e) {
      e.stopPropagation();
      var target = e.target;
      var galleryWrap = galleryItems[i];
      var gallery = galleryWrap.querySelector('.splide');
      var isActive = gallery.classList.contains('is-active');

      if (Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["isHidden"])(galleryWrap)) {
        galleryWrap.style.display = 'block';
        target.classList.add('active');

        if (!isActive) {
          var g = new Splide(gallery, productGalleryOptions);
          g.mount();
          g.on('mounted', Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["onMountedHideArrowsSlider"])(g));
        }
      } // remove


      var siblingsTabs = Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["getSiblings"])(target);
      siblingsTabs.forEach(function (item) {
        item.classList.remove('active');
      }); // hidden prev display gallery

      var siblingsPanes = Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["getSiblings"])(galleryWrap);
      siblingsPanes.forEach(function (item) {
        item.style.display = 'none';
      });
    });
  });
}

/***/ }),

/***/ "./app/js/modules/historyGallery.js":
/*!******************************************!*\
  !*** ./app/js/modules/historyGallery.js ***!
  \******************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helpers */ "./app/js/utils/helpers.js");

var sliderHistoryElem = document.querySelector('.js-history');

if (sliderHistoryElem) {
  var sliderHistory = new Splide(sliderHistoryElem, {
    perPage: 3,
    perMove: 1,
    gap: 88,
    pagination: false,
    padding: {
      left: (window.screen.width - 1230) / 2 + 'px',
      right: (window.screen.width - 1230) / 2 + 'px'
    },
    breakpoints: {
      1240: {
        perPage: 2,
        gap: 80,
        padding: {
          // left: (window.screen.width - 960) / 2 + 'px',
          right: '240px'
        }
      },
      991: {
        perPage: 2,
        gap: 40,
        padding: {
          // left: (window.screen.width - 960) / 2 + 'px',
          right: 0
        }
      },
      639: {
        perPage: 1
      }
    } // breakpoints: {
    //   1240: {
    //     perPage: 2,
    //     gap: 80,
    //   },
    //   991: {
    //     perPage: 2,
    //     gap: 40,
    //   },
    //   639: {
    //     perPage: 1,
    //     gap: 0,
    //   },
    // },

  });
  sliderHistory.mount();
  sliderHistory.on('mounted', Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["setCurrentIndexSLide"])(sliderHistory));
  sliderHistory.on('move', function (newIndex) {
    Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["setCurrentIndexSLide"])(sliderHistory, newIndex);
  });
}

/***/ }),

/***/ "./app/js/modules/mobileNav.js":
/*!*************************************!*\
  !*** ./app/js/modules/mobileNav.js ***!
  \*************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helpers */ "./app/js/utils/helpers.js");

var mobileNavTrigger = document.querySelector('.mobile-nav-trigger'),
    mobileNavClose = document.querySelector('.mobile-nav-close');

if (mobileNavTrigger && mobileNavClose) {
  mobileNavTrigger.addEventListener('click', function (e) {
    e.stopPropagation();
    var nav = document.querySelector('.nav');
    nav.classList.add('opened');
    Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["overlayVisibility"])(true);
  });
  mobileNavClose.addEventListener('click', function (e) {
    e.stopPropagation();
    var nav = document.querySelector('.nav');
    nav.classList.remove('opened');
    Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["overlayVisibility"])(false);
  });
}

/***/ }),

/***/ "./app/js/modules/photoGallery.js":
/*!****************************************!*\
  !*** ./app/js/modules/photoGallery.js ***!
  \****************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helpers */ "./app/js/utils/helpers.js");
 // 1200 - container width

var sliderPhotosElem = document.querySelector('.js-photo-gallery');

if (sliderPhotosElem) {
  var sliderPhotos = new Splide(sliderPhotosElem, {
    perPage: 1,
    perMove: 1,
    gap: 65,
    pagination: false,
    lazyLoad: 'nearby',
    autoWidth: true,
    padding: {
      left: (window.screen.width - 1200) / 2 + 'px',
      right: (window.screen.width - 1200) / 2 + 'px'
    },
    breakpoints: {
      1240: {
        autoWidth: false,
        padding: {
          right: 220
        },
        gap: 50
      },
      991: {
        autoWidth: false,
        padding: {
          right: 165
        },
        gap: 30
      },
      639: {
        autoWidth: false,
        padding: {
          right: 80
        },
        gap: 15
      }
    }
  });
  sliderPhotos.mount();
  sliderPhotos.on('mounted', Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["setCurrentIndexSLide"])(sliderPhotos));
  sliderPhotos.on('move', function (newIndex) {
    Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["setCurrentIndexSLide"])(sliderPhotos, newIndex);
  });
}

/***/ }),

/***/ "./app/js/modules/productQuantity.js":
/*!*******************************************!*\
  !*** ./app/js/modules/productQuantity.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

// Product quantity
function incrementValue(e) {
  e.preventDefault();
  var fieldName = e.target.dataset.field;
  var parent = e.target.parentNode;
  var currentVal = parseInt(parent.querySelector('input[name=' + fieldName + ']').value, 10);

  if (!isNaN(currentVal)) {
    parent.querySelector('input[name=' + fieldName + ']').value = currentVal + 1;
  } else {
    parent.querySelector('input[name=' + fieldName + ']').value = 0;
  }
}

function decrementValue(e) {
  e.preventDefault();
  var fieldName = e.target.dataset.field;
  var parent = e.target.parentNode;
  var currentVal = parseInt(parent.querySelector('input[name=' + fieldName + ']').value, 10);

  if (!isNaN(currentVal) && currentVal > 0) {
    parent.querySelector('input[name=' + fieldName + ']').value = currentVal - 1;
  } else {
    parent.querySelector('input[name=' + fieldName + ']').value = 0;
  }
}

var fieldsQuantitys = document.querySelectorAll('.field-quantity');

if (fieldsQuantitys.length) {
  var _iterator = _createForOfIteratorHelper(fieldsQuantitys),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var field = _step.value;
      field.addEventListener('click', function (event) {
        if (event.target.className === 'field-quantity__plus') {
          incrementValue(event);
        }

        if (event.target.className === 'field-quantity__minus') {
          decrementValue(event);
        }
      });
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
}

/***/ }),

/***/ "./app/js/modules/tabs.js":
/*!********************************!*\
  !*** ./app/js/modules/tabs.js ***!
  \********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/helpers */ "./app/js/utils/helpers.js");
 // tabs init

if (document.querySelector('[data-tabs]')) {
  tabbis();
}

document.addEventListener('tabbis', function (e) {
  var data = e.detail;
  setLabelActiveTab(data);
  var siblings = Object(_utils_helpers__WEBPACK_IMPORTED_MODULE_0__["getSiblings"])(data.pane);
  siblings.forEach(function (item) {
    item.classList.remove('show');
  });
  data.pane.classList.add('show');
}, false);
var tabsMobile = document.querySelectorAll('[data-tabs-mobile]');

if (tabsMobile) {
  tabsMobile.forEach(function (btn) {
    btn.textContent = btn.parentNode.querySelector('[tabindex="0"]').textContent;
    btn.addEventListener('click', function (e) {
      e.target.classList.toggle('active');
      var tabs = e.target.parentNode.querySelector('[data-tabs]');
      tabs.classList.toggle('show');
    });
  });
}

function setLabelActiveTab(data) {
  if (!data) {
    return false;
  }

  var parent = data.tab.closest('.tabs-nav');

  if (parent) {
    var mobileBtn = parent.querySelector('[data-tabs-mobile]') || null;

    if (mobileBtn) {
      mobileBtn.textContent = data.tab.textContent;
    }
  }
}

/***/ }),

/***/ "./app/js/utils/helpers.js":
/*!*********************************!*\
  !*** ./app/js/utils/helpers.js ***!
  \*********************************/
/*! exports provided: isHidden, isOutSideClick, getSiblings, setCurrentIndexSLide, onMountedHideArrowsSlider, overlayVisibility */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isHidden", function() { return isHidden; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isOutSideClick", function() { return isOutSideClick; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSiblings", function() { return getSiblings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setCurrentIndexSLide", function() { return setCurrentIndexSLide; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "onMountedHideArrowsSlider", function() { return onMountedHideArrowsSlider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "overlayVisibility", function() { return overlayVisibility; });
var isHidden = function isHidden(elem) {
  var style = window.getComputedStyle(elem);
  return style.display === 'none';
};

var getSiblings = function getSiblings(e) {
  var siblings = [];

  if (!e.parentNode) {
    return siblings;
  }

  var sibling = e.parentNode.firstChild; // collecting siblings

  while (sibling) {
    if (sibling.nodeType === 1 && sibling !== e) {
      siblings.push(sibling);
    }

    sibling = sibling.nextSibling;
  }

  return siblings;
};

var setCurrentIndexSLide = function setCurrentIndexSLide(slider) {
  var newIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
  var content = "".concat(newIndex + 1, " / ").concat(slider.length);
  var prevArrow = slider.Components.Elements.arrows.prev;
  var arrowsParent = prevArrow.parentNode;
  var span = arrowsParent.querySelector('span');

  if (span === null) {
    var _span = document.createElement('span');

    _span.textContent = content;
    arrowsParent.insertBefore(_span, prevArrow.nextSibling);
  } else {
    span.textContent = content;
    arrowsParent.insertBefore(span, prevArrow.nextSibling);
  }
};

var onMountedHideArrowsSlider = function onMountedHideArrowsSlider(slider) {
  if (slider.length <= slider.options.perPage) {
    slider.root.classList.add('arrows-hide');
    var arrows = slider.root.querySelector('.splide__arrows');
    arrows.style.display = 'none';
  }
};

var overlayVisibility = function overlayVisibility(display) {
  var overlay = document.querySelector('.overlay'),
      body = document.querySelector('body');

  if (overlay && display === true) {
    overlay.classList.add('show');
    body.classList.add('scroll-off');
  } else if (overlay && display === false) {
    overlay.classList.remove('show');
    body.classList.remove('scroll-off');
  }
};

var isOutSideClick = function isOutSideClick(event, selector) {
  var nodeElem = document.querySelector(selector);
  var isClickInsideElement = nodeElem.contains(event.target);
  if (!isClickInsideElement) return true;else return false;
};



/***/ })

/******/ });
//# sourceMappingURL=main.js.map